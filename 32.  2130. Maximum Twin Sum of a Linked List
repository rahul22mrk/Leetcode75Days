/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public int pairSum(ListNode head) {

        //count the nodes
        int cnt=0;
        ListNode temp = head;
        while(temp!=null){
            temp=temp.next;
            cnt++;
        }

        //manage the first and second half of nodes value
        ListNode first =head,second=head;

        //move the second half 
        for(int i=0;i<cnt/2;i++){
            second =second.next;
        }

        //calculate the sum of first and second half
        int arrSum[] =  new int[cnt/2];

        for(int i=0;i<cnt/2;i++){
            arrSum[i] += first.val;
            arrSum[cnt/2 - i-1] += second.val;

            first =first.next;
            second= second.next;
        }

        //maintain the max sum
        int ans=0;
        for(int i=0;i<cnt/2;i++){
            ans = Math.max(ans,arrSum[i]);
        }
        return ans;
        
    }
}
